name: Deploy Warp Power ðŸš€

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Deploy Angular Frontend to Netlify
  deploy-frontend:
    runs-on: ubuntu-latest
    name: Deploy Frontend to Netlify
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
    
    - name: Install dependencies
      working-directory: ./client
      run: npm ci
    
    - name: Build Angular app
      working-directory: ./client
      run: npm run build
    
    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v3.0
      with:
        publish-dir: './client/dist/warp-power-client/browser'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: true
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
  
  # Deploy .NET API to Azure
  deploy-backend:
    runs-on: ubuntu-latest
    name: Deploy API to Azure App Service
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      working-directory: ./server
      run: dotnet restore
    
    - name: Build application
      working-directory: ./server
      run: dotnet build --configuration Release --no-restore
    
    - name: Publish application
      working-directory: ./server
      run: dotnet publish --configuration Release --no-build --output ./publish
    
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: 'warp-power-api'
        slot-name: 'production'
        package: './server/publish'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
